(dp1
S'output'
p2
S'<class \'_mysql_exceptions.OperationalError\'> (1025, "Error on rename of \'./sahana/#sql-32f3_6ff\' to \'./sahana/inv_kit_item\' (errno: 150)")'
p3
sS'layer'
p4
S'/home/web2py/applications/eden/views/inv/index.html'
p5
sS'code'
p6
S'response.write(\'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\\n<html xmlns="http://www.w3.org/1999/xhtml" lang="\', escape=False)\nresponse.write(T.accepted_language or "en")\nresponse.write(\'">\', escape=False)\n# class="no-js" needed for modernzr\nresponse.write(\'\\n<head>\\n<meta http-equiv="content-type" content="text/html; charset=utf-8" />\\n\', escape=False)\n# Always force latest IE rendering engine (even in intranet) & Chrome Frame\nresponse.write(\'\\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />\\n<title>\', escape=False)\ntry:\n    response.write(title)\nexcept:\n    response.write(response.title or settings.get_system_name_short())\n    pass\nresponse.write(\'</title>\\n\', escape=False)\nif response.refresh:\n    response.write(XML(response.refresh))\n    pass\nresponse.write(\'\\n\', escape=False)\n# http://dev.w3.org/html5/markup/meta.name.html\nresponse.write(\'\\n<meta name="application-name" content="\', escape=False)\nresponse.write(appname)\nresponse.write(\'" />\\n\', escape=False)\n# Set your site up with Google: http://google.com/webmasters\nresponse.write(\'\\n\', escape=False)\n# <meta name="google-site-verification" content="" />\nresponse.write(\'\\n\', escape=False)\na="""<!--  Mobile Viewport Fix\\n j.mp/mobileviewport & davidbcalhoun.com/2010/viewport-metatag\\n device-width: Occupy full width of the screen in its current orientation\\n initial-scale = 1.0 retains dimensions instead of zooming out if page height > device height\\n maximum-scale = 1.0 retains dimensions instead of zooming in if page width < device width\\n--> """\nresponse.write(\'\\n<meta name="viewport" content="width=device-width; initial-scale=1.0; maximum-scale=1.0;" />\\n\', escape=False)\n# Place favicon.ico and apple-touch-icon.png in the root of your domain and delete these references\nresponse.write(\'\\n<link rel="shortcut icon" href="/\', escape=False)\nresponse.write(appname)\nresponse.write(\'/static/favicon.ico" type="image/x-icon" />\\n\', escape=False)\n# <link rel="apple-touch-icon" href="/=appname/static/favicon.png" />\nresponse.write(\'\\n<style type="text/css">\\n\', escape=False)\nif s3.rtl:\n    response.write(\'\\n div{direction:rtl;}\\n\', escape=False)\nelse:\n    response.write(\'\\n body{direction:ltr;}\\n\', escape=False)\n    pass\nresponse.write(\'\\n</style>\\n\', escape=False)\nif s3.debug:\n    response.write(\'\\n <link href="/\', escape=False)\n    response.write(appname)\n    response.write(\'/static/scripts/ext/resources/css/ext-all.css" rel="stylesheet" type="text/css" />\\n <link href="/\', escape=False)\n    response.write(appname)\n    response.write(\'/static/scripts/ext/resources/css/xtheme-gray.css" rel="stylesheet" type="text/css" />\\t\\n \', escape=False)\n    response.write(s3base.s3_include_debug_css())\n    response.write(\'\\n\', escape=False)\nelse:\n    response.write(\'\\n <link href="/\', escape=False)\n    response.write(appname)\n    response.write(\'/static/scripts/ext/resources/css/ext-theme.min.css" rel="stylesheet" type="text/css" />\\n \', escape=False)\n    # Built by /static/scripts/tools/build.sahana.py\n    response.write(\'\\n <link href="/\', escape=False)\n    response.write(appname)\n    response.write(\'/static/themes/RGIMS/eden.min.css" rel="stylesheet" type="text/css" />\\n\', escape=False)\n    pass\nresponse.write(\'\\n\', escape=False)\nfor sheet in s3.external_stylesheets:\n    response.write(\'\\n <link href="\', escape=False)\n    response.write(sheet)\n    response.write(\'" rel="stylesheet" type="text/css" media="screen" charset="utf-8" />\\n\', escape=False)\n    pass\nresponse.write(\'\\n\', escape=False)\nfor sheet in s3.stylesheets:\n    response.write(\'\\n <link href="/\', escape=False)\n    response.write(appname)\n    response.write(\'/static/styles/\', escape=False)\n    response.write(sheet)\n    response.write(\'" rel="stylesheet" type="text/css" media="screen" charset="utf-8" />\\n\', escape=False)\n    pass\nresponse.write(\'\\n\', escape=False)\nif s3.debug:\n    response.write(\'<!--Running in Debug mode, so we want each script to download separately & to use the uncompressed versions-->\\n<script type="text/javascript" src="/\', escape=False)\n    response.write(appname)\n    response.write(\'/static/scripts/ba-debug.min.js"></script>\\n<script type="text/javascript">//<![CDATA[\\nfunction s3_debug(message, value) {\\n    if (undefined == value) {\\n        debug.debug(\\\'s3_debug: \\\' + message);\\n    } else {\\n    debug.debug(\\\'s3_debug: \\\' + message + \\\': \\\' + value);\\n    }\\n}\\n//]]></script>\\n\', escape=False)\n    if s3.cdn:\n        response.write(\'\\n <!-- For Sites Hosted on the Public Internet, using Google\\\'s version of jQuery should provide better performance -->\\n <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.js" type="text/javascript"></script>\\n <!--<script src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.6.2.js" type="text/javascript"></script>-->\\n <!-- For Sites Hosted on the Public Internet, using Cachefly CDN\\\'s version of ExtJS should provide better performance -->\\n <script src="http://extjs.cachefly.net/ext-3.4.0/adapter/jquery/ext-jquery-adapter-debug.js" type="text/javascript"></script>\\n <script src="http://extjs.cachefly.net/ext-3.4.0/ext-all-debug.js" type="text/javascript"></script>\\n <script src="http://extjs.cachefly.net/ext-3.4.0/src/locale/ext-lang-\', escape=False)\n        response.write(s3.language)\n        response.write(\'.js" type="text/javascript"></script>\\n <link href="http://extjs.cachefly.net/ext-3.4.0/resources/css/ext-all.css" rel="stylesheet" type="text/css" />\\n <link href="http://extjs.cachefly.net/ext-3.4.0/resources/css/xtheme-gray.css" rel="stylesheet" type="text/css" />\\n\', escape=False)\n    else:\n        response.write(\'\\n <script src="/\', escape=False)\n        response.write(appname)\n        response.write(\'/static/scripts/jquery-1.7.2.js" type="text/javascript"></script> \\n <script src="/\', escape=False)\n        response.write(appname)\n        response.write(\'/static/scripts/ext/adapter/jquery/ext-jquery-adapter-debug.js" type="text/javascript"></script>\\n <script src="/\', escape=False)\n        response.write(appname)\n        response.write(\'/static/scripts/ext/ext-all-debug.js" type="text/javascript"></script>\\n \', escape=False)\n        response.write(s3base.s3_include_debug_js())\n        response.write(\'\\n <script src="/\', escape=False)\n        response.write(appname)\n        response.write(\'/static/scripts/ext/src/locale/ext-lang-\', escape=False)\n        response.write(s3.language)\n        response.write(\'.js" type="text/javascript"></script>  \\n\', escape=False)\n        pass\n    response.write(\'\\n\', escape=False)\nelse:\n    # Running in Production mode, so we want fewer compressed scripts to download\n    response.write(\'\\n<script type="text/javascript">function s3_debug(){}</script>\\n\', escape=False)\n    if s3.cdn:\n        # For Sites Hosted on the Public Internet, using a CDN should provide better performance\n        response.write(\'\\n <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js" type="text/javascript"></script>\\n <script src="http://extjs.cachefly.net/ext-3.4.0/adapter/jquery/ext-jquery-adapter.js" type="text/javascript"></script>\\n <script src="http://extjs.cachefly.net/ext-3.4.0/ext-all.js" type="text/javascript"></script>\\n <script src="http://extjs.cachefly.net/ext-3.4.0/src/locale/ext-lang-\', escape=False)\n        response.write(s3.language)\n        response.write(\'.js" type="text/javascript"></script>  \\n\', escape=False)\n    else:\n        response.write(\'\\n <script src="/\', escape=False)\n        response.write(appname)\n        response.write(\'/static/scripts/jquery-1.7.2.min.js" type="text/javascript"></script>\\n <script src="/\', escape=False)\n        response.write(appname)\n        response.write(\'/static/scripts/ext/adapter/jquery/ext-jquery-adapter.js" type="text/javascript"></script>\\n <script src="/\', escape=False)\n        response.write(appname)\n        response.write(\'/static/scripts/ext/ext-all.js" type="text/javascript"></script>  \\n <script src="/\', escape=False)\n        response.write(appname)\n        response.write(\'/static/scripts/ext/src/locale/ext-lang-\', escape=False)\n        response.write(s3.language)\n        response.write(\'.js" type="text/javascript"></script>  \\n\', escape=False)\n        pass\n    response.write(\'\\n\', escape=False)\n    # Built by /static/scripts/tools/build.sahana.py\n    response.write(\'\\n<script src="/\', escape=False)\n    response.write(appname)\n    response.write(\'/static/scripts/S3/S3.min.js" type="text/javascript"></script>\\n\', escape=False)\n    pass\nresponse.write(\'\\n\', escape=False)\n# Scripts which need pre-processing by server must be called in-line\nresponse.write(\'\\n<script type="text/javascript">//<![CDATA[\\n\', escape=False)\n# Translation Strings\nresponse.write(\'\\n\', escape=False)\n# These are messages which are translatable & can then be available to Static JavaScript\nresponse.write("\\nS3.i18n=Object()\\nS3.i18n.language=\'", escape=False)\nresponse.write(s3.language)\nresponse.write("\'\\nS3.i18n.ajax_wht=\'", escape=False)\nresponse.write(T("We have tried"))\nresponse.write("\'\\nS3.i18n.ajax_gvn=\'", escape=False)\nresponse.write(T("times and it is still not working. We give in. Sorry."))\nresponse.write("\'\\nS3.i18n.ajax_500=\'", escape=False)\nresponse.write(T("Sorry - the server has a problem, please try again later."))\nresponse.write("\'\\nS3.i18n.ajax_dwn=\'", escape=False)\nresponse.write(T("There was a problem, sorry, please try again later."))\nresponse.write("\'\\nS3.i18n.ajax_get=\'", escape=False)\nresponse.write(T("getting"))\nresponse.write("\'\\nS3.i18n.ajax_fmd=\'", escape=False)\nresponse.write(T("form data"))\nresponse.write("\'\\nS3.i18n.ajax_rtr=\'", escape=False)\nresponse.write(T("retry"))\nresponse.write(\'\\\'\\nS3.i18n.unsaved_changes="\', escape=False)\nresponse.write(T("You have unsaved changes. Click Cancel now, then \'Save\' to save them. Click OK now to discard them."))\nresponse.write(\'"\\nS3.i18n.datetime_format=\\\'\', escape=False)\nresponse.write(T("%Y-%m-%d %H:%M:%S"))\nresponse.write("\'\\nS3.i18n.hour=\'", escape=False)\nresponse.write(T("Hour"))\nresponse.write("\'\\nS3.i18n.minute=\'", escape=False)\nresponse.write(T("Minute"))\nresponse.write("\'\\nS3.i18n.delete_confirmation=\'", escape=False)\nresponse.write(T("Are you sure you want to delete this record?"))\nresponse.write("\'\\nS3.i18n.close_map=\'", escape=False)\nresponse.write(T("Close map"))\nresponse.write("\'\\nS3.i18n.no_match=\'", escape=False)\nresponse.write(T("No match"))\nresponse.write("\'\\nS3.i18n.in_inv=\'", escape=False)\nresponse.write(T("in Stock"))\nresponse.write("\'\\nS3.i18n.no_packs=\'", escape=False)\nresponse.write(T("No Packs for Item"))\nresponse.write("\'\\nS3.i18n.input_number=\'", escape=False)\nresponse.write(T("Please enter a number only"))\nresponse.write("\'\\nS3.i18n.ac_widget_more_results=\'", escape=False)\nresponse.write(T("Greater than 10 matches. Please refine search further"))\nresponse.write("\'", escape=False)\nresponse.write(\'\\n\', escape=False)\n# Global variables\nresponse.write("\\nS3.Ap=\'/", escape=False)\nresponse.write(appname)\nresponse.write("\'\\n", escape=False)\nif s3.rtl:\n    response.write(\'S3.rtl=true\', escape=False)\nelse:\n    response.write(\'S3.rtl=false\', escape=False)\n    pass\nresponse.write(\'\\n\', escape=False)\nif s3.interactive:\n    response.write(\'S3.interactive=true\', escape=False)\nelse:\n    response.write(\'S3.interactive=false\', escape=False)\n    pass\nresponse.write(\'\\n//]]></script>\', escape=False)\nresponse.write(\'\\n</head>\\n\', escape=False)\ntry:\n    response.write(\'\\n \', escape=False)\n    if r.representation == "popup":\n        representation = "popup"\n        response.write(\'\\n \', escape=False)\n    elif r.representation == "iframe":\n        representation = "iframe"\n        response.write(\'\\n \', escape=False)\n    else:\n        representation = ""\n        pass\n    response.write(\'\\n\', escape=False)\nexcept:\n    representation = ""\n    pass\nresponse.write(\'\\n\', escape=False)\nif representation == "popup":\n    response.write(\'\\n <body>\\n \', escape=False)\n    if s3.debug:\n        s3.scripts.append(URL(c="static", f="scripts", args=["S3", "s3.popup.js"]))\n        response.write(\'\\n \', escape=False)\n    else:\n        s3.scripts.append(URL(c="static", f="scripts", args=["S3", "s3.popup.min.js"]))\n        pass\n    response.write(\'\\n \', escape=False)\n    if response.flash or response.confirmation:\n        response.write(\'\\n  \', escape=False)\n        # Close the pop up\n        response.write(\'\\r\\n\', escape=False)\n        # Refresh the DIV\n        response.write(\'\\r\\n\', escape=False)\n        s3.jquery_ready.append("""self.parent.$(\'.TB_closeAjaxWindow\').html(\'\')\r\\ns3_tb_refresh()""")\n        response.write("\\r\\n<div id=\'popup\' class=\'cf\'><center>\\r\\n <p style=\'padding:20px 20px;\'>\\r\\n <h2>", escape=False)\n        response.write(T("Submission successful - please wait"))\n        response.write(\'...</h2>\\r\\n <p>\\r\\n</center></div>\', escape=False)\n        response.write(\'\\n \', escape=False)\n    else:\n        response.write(\'\\n\', escape=False)\n        response.write("\\n<div id=\'home\'>\\n<h2>", escape=False)\n        response.write(module_name)\n        response.write(\'</h2>\\n<p>\', escape=False)\n        response.write(T("This module allows Warehouse Stock to be managed, requested & shipped between the Warehouses and Other Inventories"))\n        response.write(\'</p>\\n<p>\', escape=False)\n        response.write(T("Inventory Items include both consumable supplies & those which will get turned into Assets at their destination."))\n        response.write("</p>\\n<div class=\'col2left\'>\\n<ul>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="inv", f="warehouse"))\n        response.write("\'>", escape=False)\n        response.write(T("Warehouses"))\n        response.write(\'</a></li>\\n  \', escape=False)\n        try:\n            response.write(XML(warehouses))\n        except:\n            pass\n        response.write(\'\\n  <li>\', escape=False)\n        response.write(T("Other Inventories"))\n        response.write("</a>\\n  <ul>\\n    <li><a href=\'", escape=False)\n        response.write(URL(c="org", f="office"))\n        response.write("\'>", escape=False)\n        response.write(T("Offices"))\n        response.write("</a>\\n    <li><a href=\'", escape=False)\n        response.write(URL(c="inv", f="facility"))\n        response.write("\'>", escape=False)\n        response.write(T("Facilities"))\n        response.write(\'</a>\\n  \', escape=False)\n        if settings.has_module("cr"):\n            response.write("\\n    <li><a href=\'", escape=False)\n            response.write(URL(c="cr", f="shelter"))\n            response.write("\'>", escape=False)\n            response.write(s3.crud_strings["cr_shelter"].name_nice_plural)\n            response.write(\'</a>\\n  \', escape=False)\n            pass\n        response.write(\'\\n  \', escape=False)\n        if settings.has_module("hms"):\n            response.write("\\n    <li><a href=\'", escape=False)\n            response.write(URL(c="hms", f="hospital"))\n            response.write("\'>", escape=False)\n            response.write(T("Hospitals"))\n            response.write(\'</a>\\n  \', escape=False)\n            pass\n        response.write("\\n  </ul>\\n</ul>\\n</div>\\n<div class=\'col2right\'>\\n<h4>", escape=False)\n        response.write(T("Warehouse Stock"))\n        response.write(":</h4>\\n<ul>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="inv", f="inv_item", args="search"))\n        response.write("\'>", escape=False)\n        response.write(T("Search"))\n        response.write("</a>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="inv", f="track_item", args="search"))\n        response.write("\'>", escape=False)\n        response.write(T("Search Shipped Items"))\n        response.write("</a>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="inv", f="adj"))\n        response.write("\'>", escape=False)\n        response.write(T("Adjust Stock Levels"))\n        response.write("</a>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="inv", f="inv_item", args="import"))\n        response.write("\'>", escape=False)\n        response.write(T("Import"))\n        response.write(\'</a>\\n</ul>\\n\', escape=False)\n        try:\n            response.write(XML(inventory))\n        except:\n            pass\n        response.write(\'\\n</div>\\n<h3>\', escape=False)\n        response.write(T("Reports"))\n        response.write(":</h3>\\n<ul>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="inv", f="inv_item", args="report"))\n        response.write("\'>", escape=False)\n        response.write(T("Warehouse Stock"))\n        response.write("</a>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="inv", f="inv_item", args="search", vars=dict(report="mon")))\n        response.write("\'>", escape=False)\n        response.write(T("Monetization"))\n        response.write("</a>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="inv", f="inv_item", args="search", vars=dict(report="rel")))\n        response.write("\'>", escape=False)\n        response.write(T("Summary of Releases"))\n        response.write("</a>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="inv", f="inv_item", args="search", vars=dict(report="inc")))\n        response.write("\'>", escape=False)\n        response.write(T("Summary of Incoming Supplies"))\n        response.write("</a>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="inv", f="inv_item", args="search", vars=dict(report="util")))\n        response.write("\'>", escape=False)\n        response.write(T("Utilization Report"))\n        response.write("</a>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="inv", f="inv_item", args="search", vars=dict(report="exp")))\n        response.write("\'>", escape=False)\n        response.write(T("Expiration Report"))\n        response.write(\'</a>\\n</ul>\\n</div>\\n<h3>\', escape=False)\n        response.write(T("Shipments"))\n        response.write(":</h3>\\n<div class=\'col2left\'>\\n<h4>", escape=False)\n        response.write(T("Orders") if settings.get_inv_shipment_name() == "order" else T("Receive/Incoming"))\n        response.write("</h4>\\n<ul>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="inv", f="recv", args="create"))\n        response.write("\'>", escape=False)\n        response.write(T("Add"))\n        response.write("</a>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="inv", f="recv"))\n        response.write("\'>", escape=False)\n        response.write(T("List All"))\n        response.write("</a>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="inv", f="recv", args="search"))\n        response.write("\'>", escape=False)\n        response.write(T("Search"))\n        response.write("</a>\\n</ul>\\n</div>\\n<div class=\'col2right\'>\\n<h4>", escape=False)\n        response.write(T("Sent"))\n        response.write("</h4>\\n<ul>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="inv", f="send", args="create"))\n        response.write("\'>", escape=False)\n        response.write(T("New"))\n        response.write("</a>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="inv", f="send"))\n        response.write("\'>", escape=False)\n        response.write(T("List All"))\n        response.write("</a>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="inv", f="send", args="search"))\n        response.write("\'>", escape=False)\n        response.write(T("Search"))\n        response.write("</a>\\n</div>\\n<div class=\'col2left\'>\\n<h3>", escape=False)\n        response.write(T("Items"))\n        response.write(":</h3>\\n<ul>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="supply", f="item", args="create"))\n        response.write("\'>", escape=False)\n        response.write(T("New"))\n        response.write("</a>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="supply", f="item"))\n        response.write("\'>", escape=False)\n        response.write(T("List All"))\n        response.write("</a>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="supply", f="item", args="search"))\n        response.write("\'>", escape=False)\n        response.write(T("Search"))\n        response.write(\'</a>\\n      \', escape=False)\n        try:\n            response.write(XML(supply_items))\n        except:\n            pass\n        response.write(\'\\n</ul>\\n<h4>\', escape=False)\n        response.write(T("Catalogs"))\n        response.write("</h4>\\n<ul>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="supply", f="item", args="create"))\n        response.write("\'>", escape=False)\n        response.write(T("New"))\n        response.write("</a>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="supply", f="item"))\n        response.write("\'>", escape=False)\n        response.write(T("List All"))\n        response.write(\'</a>\\n</ul>\\n</div>\\n\', escape=False)\n        if s3_has_role(ADMIN):\n            response.write("\\n<div class=\'col2right\'>\\n<h3>", escape=False)\n            response.write(T("Item Categories"))\n            response.write(":</h3>\\n<ul>\\n  <li><a href=\'", escape=False)\n            response.write(URL(c="supply", f="item_category", args="create"))\n            response.write("\'>", escape=False)\n            response.write(T("New"))\n            response.write("</a>\\n  <li><a href=\'", escape=False)\n            response.write(URL(c="supply", f="item_category"))\n            response.write("\'>", escape=False)\n            response.write(T("List All"))\n            response.write(\'</a>\\n</ul>\\n</div>\\n\', escape=False)\n            pass\n        response.write(\'\\n</div>\\n\', escape=False)\n        if s3.debug:\n            response.write(\'\\n \', escape=False)\n            s3.scripts.append("/%s/static/scripts/jquery.dataTables.js" % appname)\n            response.write(\'\\n \', escape=False)\n            s3.scripts.append("/%s/static/scripts/jquery.dataTables.fnSetFilteringDelay.js" % appname)\n            response.write(\'\\n \', escape=False)\n            s3.scripts.append("/%s/static/scripts/jquery.dataTables.sortFunctions.js" % appname)\n            response.write(\'\\n \', escape=False)\n            s3.scripts.append("/%s/static/scripts/S3/s3.dataTables.js" % appname)\n            response.write(\'\\n\', escape=False)\n        else:\n            s3.scripts.append("/%s/static/scripts/S3/s3.dataTables.min.js" % appname)\n            pass\n        response.write(\'\\n<script type="text/javascript">\\n\\nS3.i18n.all=\\\'\', escape=False)\n        response.write(T("All"))\n        response.write("\'\\nS3.dataTables=new Array()\\n", escape=False)\n        if s3.dataTableID:\n            response.write(\'S3.dataTables.id=[\', escape=False)\n            idlist=[s3.dataTableID] if not isinstance (s3.dataTableID, (tuple, list)) else s3.dataTableID\n            for id in idlist:\n                response.write("\'", escape=False)\n                response.write(XML(id))\n                response.write("\',", escape=False)\n                pass\n            response.write(\'\\n ]\\n\', escape=False)\n            pass\n        response.write(\'\\n\', escape=False)\n        if s3.actions:\n            response.write(\'\\n S3.dataTables.Actions=\', escape=False)\n            response.write(XML(s3.actions))\n            response.write(\'\\n \', escape=False)\n            if "_jqclick" in s3.actions[-1]:\n                response.write(\'\\n function S3ActionCallBack(event){\\n  id=this.id\\n  \', escape=False)\n                response.write(XML(s3.actions[-1]["_jqclick"]))\n                response.write(\'\\n  event.stopPropagation()\\n  return false\\n  }\\n \', escape=False)\n                pass\n            response.write(\'\\n\', escape=False)\n            pass\n        response.write(\'\\n\\n\', escape=False)\n        if response.aadata is not None:\n            response.write(\'\\n S3.dataTables.oCache={\\n  iCacheLower:\', escape=False)\n            response.write(s3.start)\n            response.write(\',\\n  iCacheUpper:\', escape=False)\n            response.write(s3.limit)\n            response.write(\',\\n  lastJson:\', escape=False)\n            response.write(XML(response.aadata))\n            response.write(\'\\n }\\n\', escape=False)\n            pass\n        response.write(\'\\n\\n</script>\\n\', escape=False)\n        if s3.dataTableMap:\n            response.write(XML(s3.dataTableMap))\n            pass\n        response.write(\'\\n\', escape=False)\n        pass\n    response.write(\'\\n\', escape=False)\nelif representation == "iframe":\n    response.write(\'\\n \', escape=False)\n    response.write(\'<body onload=\\\'iframeResizePipe()\\\'>\\r\\n<iframe id=\\\'helpframe\\\' src=\\\'\\\' height=\\\'0\\\' width=\\\'0\\\' frameborder=\\\'0\\\'></iframe>\\r\\n<script type="text/javascript">\\r\\nfunction iframeResizePipe(){\\r\\n \', escape=False)\n    #From http://stackoverflow.com/questions/153152/resizing-an-iframe-based-on-content\n    response.write(\'\\r\\n \', escape=False)\n    #Whats the page height?\n    response.write(\'\\r\\n var height=document.body.scrollHeight\\r\\n \', escape=False)\n    #Going to \'pipe\' the data to the parent through the helpframe..\n    response.write("\\r\\n var pipe=document.getElementById(\'helpframe\')\\r\\n ", escape=False)\n    #Cachebuster a precaution here to stop browser caching interfering\n    from s3.s3utils import URL2\n    response.write("\\r\\n pipe.src=\'", escape=False)\n    response.write(URL2(r=request, c="static"))\n    response.write("/helper.html?height=\'+height+\'&cacheb=\'+Math.random()\\r\\n}\\r\\n</script>", escape=False)\n    response.write(\'\\n \', escape=False)\n    response.write(\'\\n\', escape=False)\n    response.write("\\n<div id=\'home\'>\\n<h2>", escape=False)\n    response.write(module_name)\n    response.write(\'</h2>\\n<p>\', escape=False)\n    response.write(T("This module allows Warehouse Stock to be managed, requested & shipped between the Warehouses and Other Inventories"))\n    response.write(\'</p>\\n<p>\', escape=False)\n    response.write(T("Inventory Items include both consumable supplies & those which will get turned into Assets at their destination."))\n    response.write("</p>\\n<div class=\'col2left\'>\\n<ul>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="warehouse"))\n    response.write("\'>", escape=False)\n    response.write(T("Warehouses"))\n    response.write(\'</a></li>\\n  \', escape=False)\n    try:\n        response.write(XML(warehouses))\n    except:\n        pass\n    response.write(\'\\n  <li>\', escape=False)\n    response.write(T("Other Inventories"))\n    response.write("</a>\\n  <ul>\\n    <li><a href=\'", escape=False)\n    response.write(URL(c="org", f="office"))\n    response.write("\'>", escape=False)\n    response.write(T("Offices"))\n    response.write("</a>\\n    <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="facility"))\n    response.write("\'>", escape=False)\n    response.write(T("Facilities"))\n    response.write(\'</a>\\n  \', escape=False)\n    if settings.has_module("cr"):\n        response.write("\\n    <li><a href=\'", escape=False)\n        response.write(URL(c="cr", f="shelter"))\n        response.write("\'>", escape=False)\n        response.write(s3.crud_strings["cr_shelter"].name_nice_plural)\n        response.write(\'</a>\\n  \', escape=False)\n        pass\n    response.write(\'\\n  \', escape=False)\n    if settings.has_module("hms"):\n        response.write("\\n    <li><a href=\'", escape=False)\n        response.write(URL(c="hms", f="hospital"))\n        response.write("\'>", escape=False)\n        response.write(T("Hospitals"))\n        response.write(\'</a>\\n  \', escape=False)\n        pass\n    response.write("\\n  </ul>\\n</ul>\\n</div>\\n<div class=\'col2right\'>\\n<h4>", escape=False)\n    response.write(T("Warehouse Stock"))\n    response.write(":</h4>\\n<ul>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="inv_item", args="search"))\n    response.write("\'>", escape=False)\n    response.write(T("Search"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="track_item", args="search"))\n    response.write("\'>", escape=False)\n    response.write(T("Search Shipped Items"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="adj"))\n    response.write("\'>", escape=False)\n    response.write(T("Adjust Stock Levels"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="inv_item", args="import"))\n    response.write("\'>", escape=False)\n    response.write(T("Import"))\n    response.write(\'</a>\\n</ul>\\n\', escape=False)\n    try:\n        response.write(XML(inventory))\n    except:\n        pass\n    response.write(\'\\n</div>\\n<h3>\', escape=False)\n    response.write(T("Reports"))\n    response.write(":</h3>\\n<ul>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="inv_item", args="report"))\n    response.write("\'>", escape=False)\n    response.write(T("Warehouse Stock"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="inv_item", args="search", vars=dict(report="mon")))\n    response.write("\'>", escape=False)\n    response.write(T("Monetization"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="inv_item", args="search", vars=dict(report="rel")))\n    response.write("\'>", escape=False)\n    response.write(T("Summary of Releases"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="inv_item", args="search", vars=dict(report="inc")))\n    response.write("\'>", escape=False)\n    response.write(T("Summary of Incoming Supplies"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="inv_item", args="search", vars=dict(report="util")))\n    response.write("\'>", escape=False)\n    response.write(T("Utilization Report"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="inv_item", args="search", vars=dict(report="exp")))\n    response.write("\'>", escape=False)\n    response.write(T("Expiration Report"))\n    response.write(\'</a>\\n</ul>\\n</div>\\n<h3>\', escape=False)\n    response.write(T("Shipments"))\n    response.write(":</h3>\\n<div class=\'col2left\'>\\n<h4>", escape=False)\n    response.write(T("Orders") if settings.get_inv_shipment_name() == "order" else T("Receive/Incoming"))\n    response.write("</h4>\\n<ul>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="recv", args="create"))\n    response.write("\'>", escape=False)\n    response.write(T("Add"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="recv"))\n    response.write("\'>", escape=False)\n    response.write(T("List All"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="recv", args="search"))\n    response.write("\'>", escape=False)\n    response.write(T("Search"))\n    response.write("</a>\\n</ul>\\n</div>\\n<div class=\'col2right\'>\\n<h4>", escape=False)\n    response.write(T("Sent"))\n    response.write("</h4>\\n<ul>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="send", args="create"))\n    response.write("\'>", escape=False)\n    response.write(T("New"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="send"))\n    response.write("\'>", escape=False)\n    response.write(T("List All"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="send", args="search"))\n    response.write("\'>", escape=False)\n    response.write(T("Search"))\n    response.write("</a>\\n</div>\\n<div class=\'col2left\'>\\n<h3>", escape=False)\n    response.write(T("Items"))\n    response.write(":</h3>\\n<ul>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="supply", f="item", args="create"))\n    response.write("\'>", escape=False)\n    response.write(T("New"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="supply", f="item"))\n    response.write("\'>", escape=False)\n    response.write(T("List All"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="supply", f="item", args="search"))\n    response.write("\'>", escape=False)\n    response.write(T("Search"))\n    response.write(\'</a>\\n      \', escape=False)\n    try:\n        response.write(XML(supply_items))\n    except:\n        pass\n    response.write(\'\\n</ul>\\n<h4>\', escape=False)\n    response.write(T("Catalogs"))\n    response.write("</h4>\\n<ul>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="supply", f="item", args="create"))\n    response.write("\'>", escape=False)\n    response.write(T("New"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="supply", f="item"))\n    response.write("\'>", escape=False)\n    response.write(T("List All"))\n    response.write(\'</a>\\n</ul>\\n</div>\\n\', escape=False)\n    if s3_has_role(ADMIN):\n        response.write("\\n<div class=\'col2right\'>\\n<h3>", escape=False)\n        response.write(T("Item Categories"))\n        response.write(":</h3>\\n<ul>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="supply", f="item_category", args="create"))\n        response.write("\'>", escape=False)\n        response.write(T("New"))\n        response.write("</a>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="supply", f="item_category"))\n        response.write("\'>", escape=False)\n        response.write(T("List All"))\n        response.write(\'</a>\\n</ul>\\n</div>\\n\', escape=False)\n        pass\n    response.write(\'\\n</div>\\n\', escape=False)\n    if s3.debug:\n        response.write(\'\\n \', escape=False)\n        s3.scripts.append("/%s/static/scripts/jquery.dataTables.js" % appname)\n        response.write(\'\\n \', escape=False)\n        s3.scripts.append("/%s/static/scripts/jquery.dataTables.fnSetFilteringDelay.js" % appname)\n        response.write(\'\\n \', escape=False)\n        s3.scripts.append("/%s/static/scripts/jquery.dataTables.sortFunctions.js" % appname)\n        response.write(\'\\n \', escape=False)\n        s3.scripts.append("/%s/static/scripts/S3/s3.dataTables.js" % appname)\n        response.write(\'\\n\', escape=False)\n    else:\n        s3.scripts.append("/%s/static/scripts/S3/s3.dataTables.min.js" % appname)\n        pass\n    response.write(\'\\n<script type="text/javascript">\\n\\nS3.i18n.all=\\\'\', escape=False)\n    response.write(T("All"))\n    response.write("\'\\nS3.dataTables=new Array()\\n", escape=False)\n    if s3.dataTableID:\n        response.write(\'S3.dataTables.id=[\', escape=False)\n        idlist=[s3.dataTableID] if not isinstance (s3.dataTableID, (tuple, list)) else s3.dataTableID\n        for id in idlist:\n            response.write("\'", escape=False)\n            response.write(XML(id))\n            response.write("\',", escape=False)\n            pass\n        response.write(\'\\n ]\\n\', escape=False)\n        pass\n    response.write(\'\\n\', escape=False)\n    if s3.actions:\n        response.write(\'\\n S3.dataTables.Actions=\', escape=False)\n        response.write(XML(s3.actions))\n        response.write(\'\\n \', escape=False)\n        if "_jqclick" in s3.actions[-1]:\n            response.write(\'\\n function S3ActionCallBack(event){\\n  id=this.id\\n  \', escape=False)\n            response.write(XML(s3.actions[-1]["_jqclick"]))\n            response.write(\'\\n  event.stopPropagation()\\n  return false\\n  }\\n \', escape=False)\n            pass\n        response.write(\'\\n\', escape=False)\n        pass\n    response.write(\'\\n\\n\', escape=False)\n    if response.aadata is not None:\n        response.write(\'\\n S3.dataTables.oCache={\\n  iCacheLower:\', escape=False)\n        response.write(s3.start)\n        response.write(\',\\n  iCacheUpper:\', escape=False)\n        response.write(s3.limit)\n        response.write(\',\\n  lastJson:\', escape=False)\n        response.write(XML(response.aadata))\n        response.write(\'\\n }\\n\', escape=False)\n        pass\n    response.write(\'\\n\\n</script>\\n\', escape=False)\n    if s3.dataTableMap:\n        response.write(XML(s3.dataTableMap))\n        pass\n    response.write(\'\\n\', escape=False)\n    response.write(\'\\n\', escape=False)\nelse:\n    response.write("\\n<body>\\n <div id=\'menu_modules\'>\\n  ", escape=False)\n    response.write(current.menu.main)\n    response.write("\\n </div>\\n <div class=\'colmask fullpage\'>\\n  ", escape=False)\n    if current.menu.options is not None:\n        response.write("\\n   <div class=\'aside\'>\\n    <div id=\'menu_options\'>\\n     ", escape=False)\n        response.write(current.menu.options)\n        response.write(\'\\n    </div>\\n   </div>\\n  \', escape=False)\n        pass\n    response.write(\'\\n  <div \', escape=False)\n    if current.menu.options is not None:\n        response.write("class=\'rightside\'", escape=False)\n        pass\n    response.write(">\\n   <div class=\'col1\'>\\n    ", escape=False)\n    if response.error:\n        response.write("<div class=\'error\'>", escape=False)\n        response.write(response.error)\n        response.write(\'</div>\', escape=False)\n        pass\n    response.write(\'\\n    \', escape=False)\n    if response.warning:\n        response.write("<div class=\'warning\'>", escape=False)\n        response.write(response.warning)\n        response.write(\'</div>\', escape=False)\n        pass\n    response.write(\'\\n    \', escape=False)\n    if response.information:\n        response.write("<div class=\'information\'>", escape=False)\n        response.write(response.information)\n        response.write(\'</div>\', escape=False)\n        pass\n    response.write(\'\\n    \', escape=False)\n    if response.confirmation:\n        response.write("<div class=\'confirmation\'>", escape=False)\n        response.write(response.confirmation)\n        response.write(\'</div>\', escape=False)\n        pass\n    response.write(\'\\n    \', escape=False)\n    if response.flash:\n        response.write("<div class=\'confirmation\'>", escape=False)\n        response.write(response.flash)\n        response.write(\'</div>\', escape=False)\n        pass\n    response.write("\\n    <div id=\'content\' class=\'cf\'>\\n     ", escape=False)\n    #include "breadcrumbs.html"\n    response.write(\' \\n     \', escape=False)\n    response.write(\'\\n\', escape=False)\n    response.write("\\n<div id=\'home\'>\\n<h2>", escape=False)\n    response.write(module_name)\n    response.write(\'</h2>\\n<p>\', escape=False)\n    response.write(T("This module allows Warehouse Stock to be managed, requested & shipped between the Warehouses and Other Inventories"))\n    response.write(\'</p>\\n<p>\', escape=False)\n    response.write(T("Inventory Items include both consumable supplies & those which will get turned into Assets at their destination."))\n    response.write("</p>\\n<div class=\'col2left\'>\\n<ul>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="warehouse"))\n    response.write("\'>", escape=False)\n    response.write(T("Warehouses"))\n    response.write(\'</a></li>\\n  \', escape=False)\n    try:\n        response.write(XML(warehouses))\n    except:\n        pass\n    response.write(\'\\n  <li>\', escape=False)\n    response.write(T("Other Inventories"))\n    response.write("</a>\\n  <ul>\\n    <li><a href=\'", escape=False)\n    response.write(URL(c="org", f="office"))\n    response.write("\'>", escape=False)\n    response.write(T("Offices"))\n    response.write("</a>\\n    <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="facility"))\n    response.write("\'>", escape=False)\n    response.write(T("Facilities"))\n    response.write(\'</a>\\n  \', escape=False)\n    if settings.has_module("cr"):\n        response.write("\\n    <li><a href=\'", escape=False)\n        response.write(URL(c="cr", f="shelter"))\n        response.write("\'>", escape=False)\n        response.write(s3.crud_strings["cr_shelter"].name_nice_plural)\n        response.write(\'</a>\\n  \', escape=False)\n        pass\n    response.write(\'\\n  \', escape=False)\n    if settings.has_module("hms"):\n        response.write("\\n    <li><a href=\'", escape=False)\n        response.write(URL(c="hms", f="hospital"))\n        response.write("\'>", escape=False)\n        response.write(T("Hospitals"))\n        response.write(\'</a>\\n  \', escape=False)\n        pass\n    response.write("\\n  </ul>\\n</ul>\\n</div>\\n<div class=\'col2right\'>\\n<h4>", escape=False)\n    response.write(T("Warehouse Stock"))\n    response.write(":</h4>\\n<ul>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="inv_item", args="search"))\n    response.write("\'>", escape=False)\n    response.write(T("Search"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="track_item", args="search"))\n    response.write("\'>", escape=False)\n    response.write(T("Search Shipped Items"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="adj"))\n    response.write("\'>", escape=False)\n    response.write(T("Adjust Stock Levels"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="inv_item", args="import"))\n    response.write("\'>", escape=False)\n    response.write(T("Import"))\n    response.write(\'</a>\\n</ul>\\n\', escape=False)\n    try:\n        response.write(XML(inventory))\n    except:\n        pass\n    response.write(\'\\n</div>\\n<h3>\', escape=False)\n    response.write(T("Reports"))\n    response.write(":</h3>\\n<ul>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="inv_item", args="report"))\n    response.write("\'>", escape=False)\n    response.write(T("Warehouse Stock"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="inv_item", args="search", vars=dict(report="mon")))\n    response.write("\'>", escape=False)\n    response.write(T("Monetization"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="inv_item", args="search", vars=dict(report="rel")))\n    response.write("\'>", escape=False)\n    response.write(T("Summary of Releases"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="inv_item", args="search", vars=dict(report="inc")))\n    response.write("\'>", escape=False)\n    response.write(T("Summary of Incoming Supplies"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="inv_item", args="search", vars=dict(report="util")))\n    response.write("\'>", escape=False)\n    response.write(T("Utilization Report"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="inv_item", args="search", vars=dict(report="exp")))\n    response.write("\'>", escape=False)\n    response.write(T("Expiration Report"))\n    response.write(\'</a>\\n</ul>\\n</div>\\n<h3>\', escape=False)\n    response.write(T("Shipments"))\n    response.write(":</h3>\\n<div class=\'col2left\'>\\n<h4>", escape=False)\n    response.write(T("Orders") if settings.get_inv_shipment_name() == "order" else T("Receive/Incoming"))\n    response.write("</h4>\\n<ul>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="recv", args="create"))\n    response.write("\'>", escape=False)\n    response.write(T("Add"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="recv"))\n    response.write("\'>", escape=False)\n    response.write(T("List All"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="recv", args="search"))\n    response.write("\'>", escape=False)\n    response.write(T("Search"))\n    response.write("</a>\\n</ul>\\n</div>\\n<div class=\'col2right\'>\\n<h4>", escape=False)\n    response.write(T("Sent"))\n    response.write("</h4>\\n<ul>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="send", args="create"))\n    response.write("\'>", escape=False)\n    response.write(T("New"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="send"))\n    response.write("\'>", escape=False)\n    response.write(T("List All"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="inv", f="send", args="search"))\n    response.write("\'>", escape=False)\n    response.write(T("Search"))\n    response.write("</a>\\n</div>\\n<div class=\'col2left\'>\\n<h3>", escape=False)\n    response.write(T("Items"))\n    response.write(":</h3>\\n<ul>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="supply", f="item", args="create"))\n    response.write("\'>", escape=False)\n    response.write(T("New"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="supply", f="item"))\n    response.write("\'>", escape=False)\n    response.write(T("List All"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="supply", f="item", args="search"))\n    response.write("\'>", escape=False)\n    response.write(T("Search"))\n    response.write(\'</a>\\n      \', escape=False)\n    try:\n        response.write(XML(supply_items))\n    except:\n        pass\n    response.write(\'\\n</ul>\\n<h4>\', escape=False)\n    response.write(T("Catalogs"))\n    response.write("</h4>\\n<ul>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="supply", f="item", args="create"))\n    response.write("\'>", escape=False)\n    response.write(T("New"))\n    response.write("</a>\\n  <li><a href=\'", escape=False)\n    response.write(URL(c="supply", f="item"))\n    response.write("\'>", escape=False)\n    response.write(T("List All"))\n    response.write(\'</a>\\n</ul>\\n</div>\\n\', escape=False)\n    if s3_has_role(ADMIN):\n        response.write("\\n<div class=\'col2right\'>\\n<h3>", escape=False)\n        response.write(T("Item Categories"))\n        response.write(":</h3>\\n<ul>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="supply", f="item_category", args="create"))\n        response.write("\'>", escape=False)\n        response.write(T("New"))\n        response.write("</a>\\n  <li><a href=\'", escape=False)\n        response.write(URL(c="supply", f="item_category"))\n        response.write("\'>", escape=False)\n        response.write(T("List All"))\n        response.write(\'</a>\\n</ul>\\n</div>\\n\', escape=False)\n        pass\n    response.write(\'\\n</div>\\n\', escape=False)\n    if s3.debug:\n        response.write(\'\\n \', escape=False)\n        s3.scripts.append("/%s/static/scripts/jquery.dataTables.js" % appname)\n        response.write(\'\\n \', escape=False)\n        s3.scripts.append("/%s/static/scripts/jquery.dataTables.fnSetFilteringDelay.js" % appname)\n        response.write(\'\\n \', escape=False)\n        s3.scripts.append("/%s/static/scripts/jquery.dataTables.sortFunctions.js" % appname)\n        response.write(\'\\n \', escape=False)\n        s3.scripts.append("/%s/static/scripts/S3/s3.dataTables.js" % appname)\n        response.write(\'\\n\', escape=False)\n    else:\n        s3.scripts.append("/%s/static/scripts/S3/s3.dataTables.min.js" % appname)\n        pass\n    response.write(\'\\n<script type="text/javascript">\\n\\nS3.i18n.all=\\\'\', escape=False)\n    response.write(T("All"))\n    response.write("\'\\nS3.dataTables=new Array()\\n", escape=False)\n    if s3.dataTableID:\n        response.write(\'S3.dataTables.id=[\', escape=False)\n        idlist=[s3.dataTableID] if not isinstance (s3.dataTableID, (tuple, list)) else s3.dataTableID\n        for id in idlist:\n            response.write("\'", escape=False)\n            response.write(XML(id))\n            response.write("\',", escape=False)\n            pass\n        response.write(\'\\n ]\\n\', escape=False)\n        pass\n    response.write(\'\\n\', escape=False)\n    if s3.actions:\n        response.write(\'\\n S3.dataTables.Actions=\', escape=False)\n        response.write(XML(s3.actions))\n        response.write(\'\\n \', escape=False)\n        if "_jqclick" in s3.actions[-1]:\n            response.write(\'\\n function S3ActionCallBack(event){\\n  id=this.id\\n  \', escape=False)\n            response.write(XML(s3.actions[-1]["_jqclick"]))\n            response.write(\'\\n  event.stopPropagation()\\n  return false\\n  }\\n \', escape=False)\n            pass\n        response.write(\'\\n\', escape=False)\n        pass\n    response.write(\'\\n\\n\', escape=False)\n    if response.aadata is not None:\n        response.write(\'\\n S3.dataTables.oCache={\\n  iCacheLower:\', escape=False)\n        response.write(s3.start)\n        response.write(\',\\n  iCacheUpper:\', escape=False)\n        response.write(s3.limit)\n        response.write(\',\\n  lastJson:\', escape=False)\n        response.write(XML(response.aadata))\n        response.write(\'\\n }\\n\', escape=False)\n        pass\n    response.write(\'\\n\\n</script>\\n\', escape=False)\n    if s3.dataTableMap:\n        response.write(XML(s3.dataTableMap))\n        pass\n    response.write(\'\\n\', escape=False)\n    response.write("\\n    </div>\\n   </div>\\n  </div>\\n </div>\\n <div id=\'footer\'>\\n  ", escape=False)\n    response.write(\'\\xef\\xbb\\xbf<p id="dswd">\\n\\xc2\\xa9 1998-2012, Department of Social Welfare and Development<br/>\\nConstitution Hills, Batasan Pambansa Complex, Quezon City, Philippines<br/>\\nTel. (632)931-81-01 to 07\\n</p>\\n<p id="poweredby">\\n <img src=\\\'/\', escape=False)\n    response.write(appname)\n    response.write("/static/img/S3menu_logo.png\' width=\'30\' height=\'28\' style=\'vertical-align: middle;\' alt=\'", escape=False)\n    response.write(T("Powered by Sahana Eden"))\n    response.write("\' /><a target=\'_blank\' href=\'http://eden.sahanafoundation.org\' title=\'", escape=False)\n    response.write(T("Powered by Sahana Eden"))\n    response.write("\'>", escape=False)\n    response.write(T("Powered by Sahana Eden"))\n    response.write(\'</a>\\n</p>\\n<div class="cf"></div>\\n\\n\', escape=False)\n    response.write(\'\\n  \', escape=False)\n    if s3.debug:\n        response.write(s3.toolbar())\n        pass\n    response.write(\'\\n </div>\\n\', escape=False)\n    pass\nresponse.write(\'\\n\', escape=False)\n# Include dynamically added Scripts at the end of the body\nresponse.write(\'\\n\', escape=False)\nfor script in s3.scripts:\n    response.write(\'\\n \', escape=False)\n    response.write(SCRIPT(_src=script))\n    response.write(\'\\n\', escape=False)\n    pass\nresponse.write(\'\\n<script type="text/javascript">//<![CDATA[\\n\', escape=False)\nfor script in s3.js_global:\n    response.write(\'\\n \', escape=False)\n    response.write(XML(script))\n    response.write(\'\\n\', escape=False)\n    pass\nresponse.write(\'\\n\', escape=False)\nif s3.jquery_ready:\n    response.write(\'\\n$(document).ready(function(){\\n \', escape=False)\n    for script in s3.jquery_ready:\n        response.write(\'\\n  \', escape=False)\n        response.write(XML(script))\n        response.write(\'\\n \', escape=False)\n        pass\n    response.write(\'\\n})\\n\', escape=False)\n    pass\nresponse.write(\'\\n//]]></script>\\n\', escape=False)\nif response.google_analytics_id:\n    response.write("<script>/* http://mathiasbynens.be/notes/async-analytics-snippet */ var _gaq=[[\'_setAccount\',\'", escape=False)\n    response.write(response.google_analytics_id)\n    response.write("\'],[\'_trackPageview\']];(function(d,t){var g=d.createElement(t),s=d.getElementsByTagName(t)[0];g.src=\'//www.google-analytics.com/ga.js\';s.parentNode.insertBefore(g,s)}(document,\'script\'))</script>", escape=False)\n    pass\nresponse.write(\'\\n</body>\\n</html>\', escape=False)'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/web2py/gluon/restricted.py", line 209, in restricted\n    exec ccode in environment\n  File "/home/web2py/applications/eden/views/inv/index.html", line 684, in <module>\n  File "/home/web2py/gluon/globals.py", line 195, in write\n    self.body.write(xmlescape(data))\n  File "/home/web2py/gluon/html.py", line 114, in xmlescape\n    return data.xml()\n  File "applications/eden/modules/s3/s3navigation.py", line 836, in xml\n    output = self.render()\n  File "applications/eden/modules/s3/s3navigation.py", line 808, in render\n    output = renderer(self)\n  File "applications/eden/modules/eden/layouts.py", line 176, in layout\n    items = item.render_components()\n  File "applications/eden/modules/s3/s3navigation.py", line 820, in render_components\n    i = c.render()\n  File "applications/eden/modules/s3/s3navigation.py", line 808, in render\n    output = renderer(self)\n  File "applications/eden/modules/eden/layouts.py", line 176, in layout\n    items = item.render_components()\n  File "applications/eden/modules/s3/s3navigation.py", line 820, in render_components\n    i = c.render()\n  File "applications/eden/modules/s3/s3navigation.py", line 789, in render\n    self.authorized = self.check_permission()\n  File "applications/eden/modules/s3/s3navigation.py", line 337, in check_permission\n    if self.accessible_url() == False:\n  File "applications/eden/modules/s3/s3navigation.py", line 748, in accessible_url\n    return aURL(p=p, a=a, c=c, f=f, args=args, vars=vars)\n  File "applications/eden/modules/s3/s3aaa.py", line 5016, in accessible_url\n    table = current.s3db.table(t)\n  File "applications/eden/modules/s3/s3model.py", line 213, in table\n    model(prefix)\n  File "applications/eden/modules/s3/s3model.py", line 92, in __init__\n    env = self.model()\n  File "applications/eden/modules/eden/inv.py", line 1483, in model\n    *s3_meta_fields()\n  File "applications/eden/modules/s3/s3model.py", line 336, in define_table\n    table = db.define_table(tablename, *fields, **args)\n  File "/home/web2py/gluon/dal.py", line 7123, in define_table\n    table = self.lazy_define_table(tablename,*fields,**args)\n  File "/home/web2py/gluon/dal.py", line 7154, in lazy_define_table\n    polymodel=polymodel)\n  File "/home/web2py/gluon/dal.py", line 933, in create_table\n    fake_migrate=fake_migrate)\n  File "/home/web2py/gluon/dal.py", line 1039, in migrate_table\n    self.execute(sub_query)\n  File "/home/web2py/gluon/dal.py", line 1676, in execute\n    return self.log_execute(*a, **b)\n  File "/home/web2py/gluon/dal.py", line 1670, in log_execute\n    ret = self.cursor.execute(*a, **b)\n  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 174, in execute\n    self.errorhandler(self, exc, value)\n  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler\n    raise errorclass, errorvalue\nOperationalError: (1025, "Error on rename of \'./sahana/#sql-32f3_6ff\' to \'./sahana/inv_kit_item\' (errno: 150)")\n'
p11
s.